# Choose OS
- name: Prompt for OS selection
  ansible.builtin.pause:
    prompt: "Enter the OS (debian, fedora, ubuntu, arch)"
  register: user_os_input

- name: Set OS variable
  ansible.builtin.set_fact:
    vm_os: "{{ user_os_input.user_input | default(default_vm_os, true) }}"

- name: Validate OS selection
  ansible.builtin.fail:
    msg: "Invalid OS '{{ vm_os }}'. Choose from: debian, fedora, ubuntu, arch."
  when: vm_os not in os_variants.keys()

# Choose vm name
- name: Prompt for vm name
  ansible.builtin.pause:
    prompt: "Enter vm name"
  register: vmname

- name: Set vm name
  ansible.builtin.set_fact:
    vm_name: "{{ vmname.user_input | default(default_vm_name, true) }}"

# Choose vcpu
- name: Prompt for vcpus
  ansible.builtin.pause:
    prompt: "Enter vm cpu (plain number)"
  register: vmcpu

- name: Set vm cpu
  ansible.builtin.set_fact:
    vm_vcpus: "{{ vmcpu.user_input | default(default_vm_vcpus, true) }}"

# Choose ram
- name: Prompt for Ram
  ansible.builtin.pause:
    prompt: "Enter vm ram (MB)"
  register: vmram

- name: Set vm ram
  ansible.builtin.set_fact:
    vm_memory: "{{ vmram.user_input | default(default_vm_memory, true) }}"

# Choose disk size
- name: Prompt for disk size
  ansible.builtin.pause:
    prompt: "Enter vm disk size (GB)"
  register: vmdisk

- name: Set vm disk size
  ansible.builtin.set_fact:
    vm_disk_size: "{{ vmdisk.user_input | default(default_vm_disk_size, true) }}"

# Choose regular user name
- name: Prompt for user creation
  ansible.builtin.pause:
    prompt: "Enter username"
  register: username

- name: Set user
  ansible.builtin.set_fact:
    user: "{{ username.user_input | default('user', true) }}"

# Choose global password for root and regular user
- name: Prompt for global password
  ansible.builtin.pause:
    prompt: "Enter global password (must be hashed)"
    echo: no
  register: user_root_password

- name: Set global password
  ansible.builtin.set_fact:
    global_password: "{{ user_root_password.user_input | default(default_vm_password, true) }}"

# Add ssh key of the host machine
- name: Prompt for global ssh key
  ansible.builtin.pause:
    prompt: "Enter global ssh .pub key"
    echo: no
  register: ssh_key

- name: Set global ssh key
  ansible.builtin.set_fact:
    global_pub_key: "{{ ssh_key.user_input }}"
# Download os image 
- name: Download OS Image
  include_tasks: download_image.yml
# Create cloud init
- name: Create Cloud-Init Config
  include_tasks: create_cloud_init.yml
# Create vm
- name: Create VM
  include_tasks: create_vm.yml
